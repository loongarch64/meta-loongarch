From 1a1c48760431c9fb51046cb4a0a8b63b5fb7a5bc Mon Sep 17 00:00:00 2001
From: Zang Ruochen <zangruochen@loongson.cn>
Date: Fri, 14 Jul 2023 09:51:58 +0800
Subject: [PATCH 1/2] goarch.bbclass:Add loongarch as a compatible
 architecture.

go.bbclass:Currently loongarch does not support the pie compilation
mode.

Signed-off-by: Zang Ruochen <zangruochen@loongson.cn>
---
 meta/classes-recipe/go.bbclass     | 2 +-
 meta/classes-recipe/goarch.bbclass | 2 ++
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/meta/classes-recipe/go.bbclass b/meta/classes-recipe/go.bbclass
index 39bfaa5156..104976430e 100644
--- a/meta/classes-recipe/go.bbclass
+++ b/meta/classes-recipe/go.bbclass
@@ -163,7 +163,7 @@ INSANE_SKIP:${PN} += "ldflags"
 # doesn't support -buildmode=pie, so skip the QA checking for mips/rv32 and its
 # variants.
 python() {
-    if 'mips' in d.getVar('TARGET_ARCH') or 'riscv32' in d.getVar('TARGET_ARCH'):
+    if 'mips' in d.getVar('TARGET_ARCH') or 'riscv32' in d.getVar('TARGET_ARCH') or 'loongarch' in d.getVar('TARGET_ARCH'):
         d.appendVar('INSANE_SKIP:%s' % d.getVar('PN'), " textrel")
     else:
         d.appendVar('GOBUILDFLAGS', ' -buildmode=pie')
diff --git a/meta/classes-recipe/goarch.bbclass b/meta/classes-recipe/goarch.bbclass
index 61ead30a63..e3555e1e46 100644
--- a/meta/classes-recipe/goarch.bbclass
+++ b/meta/classes-recipe/goarch.bbclass
@@ -90,6 +90,8 @@ def go_map_arch(a, d):
         return 'ppc64'
     elif a == 'riscv64':
         return 'riscv64'
+    elif a == 'loongarch64':
+        return 'loong64'
     else:
         raise bb.parse.SkipRecipe("Unsupported CPU architecture: %s" % a)
 
-- 
2.25.1

